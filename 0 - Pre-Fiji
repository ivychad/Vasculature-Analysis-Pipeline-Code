
# import libraries

import matplotlib.pyplot as plt
import numpy as np
from PIL import Image, ImageDraw
from skimage import io
import time


#%%

# Magic numbers

# constants
# things that need to be changed according to dataset
NUMLAY = 3
STACKSIZE = 1001

DATA = 

# variables
straight_x = []
straight_y = []

array = (0,20,200,20,400,20)

def layercropping(coorfile, ):

    layerpolygon = []

    # add top line
    for n in range(11):
        layerpolygon.append(array[0][n])
        layerpolygon.append(array[1][n])
    # add bottom line
    for n in range(11, -1):
        layerpolygon.append(array[0][n])
        layerpolygon.append(array[1][n])
    
    # add complete layer cropping script

def straightening_coor(top_y,bottom_y, top_x, bottom_x):
    for i in range(11):
        dis_y = (bottom_y[i]-top_y[i])/2
        dis_y = dis_y + top_y[i]
        straight_y.append(dis_y)
        dis_x = (bottom_x[i]-top_x[i])/2
        dis_x = dis_x + top_x[i]
        straight_x.append(dis_x)
    print(straight_x, straight_y)
    # calculate the difference between top and bottom polygon y-coordinates, the difference
    # by stack size -1 = number of images that need to be interpolated

    for n in range(LINECOORCOUNT):
        diff = line_top[n][1]-line_bottom[n][1]
        dist = diff/(STACKSIZE-1)
        itrpltd_dist.append(dist)

    # fill a stack of size stack_size (size of data stack) with coordinates of top layer -> will be changed for each image in next step
    arr1 = np.array(line_top)
    stack_coordinates = [arr1]*STACKSIZE
    stack_coord = np.asarray(stack_coordinates)

    # get an array for the interpolated coordinates for all images -> image coordinate - interpolated distance

    for n in range(STACKSIZE):        
        for i in range(LINECOORCOUNT):         
            stack_coord[n][i][1] = stack_coord[n][i][1] - itrpltd_dist[i]*n
    
    straight_coord = []
    straight_coordinates = []

    for n in range(STACKSIZE):
        straight_coord = []
        for i in range(LINECOORCOUNT):
                straight_coord.append(stack_coord[n][i][0])
                straight_coord.append(stack_coord[n][i][1])      
        straight_coordinates.append(straight_coord)

    straight_coordinates = np.asarray(straight_coordinates) 

    # save to excel file with filename
    
    np.savetxt(FILENAME, straight_coordinates, delimiter=',') 
        
